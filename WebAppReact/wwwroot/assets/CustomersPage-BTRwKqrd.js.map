{"version":3,"file":"CustomersPage-BTRwKqrd.js","sources":["../../front-react/src/stores/useCustomersStore.jsx","../../front-react/src/pages/CustomersPage.jsx"],"sourcesContent":["import { create } from \"zustand\";\r\n\r\n// Define el store\r\nconst useCustomersStore = create((set) => ({\r\n  customers: [],\r\n  setCustomers: (newCustomers) => set({ customers: newCustomers }),\r\n}));\r\n\r\nexport default useCustomersStore;\r\n","import { useTranslation } from \"react-i18next\";\r\nimport LayoutDefault from \"../layouts/LayoutDefault\";\r\nimport useCustomersStore from \"../stores/useCustomersStore\";\r\nimport { useCallback, useEffect, useState } from \"react\";\r\nimport { API } from \"../stores/API/Endpoints\";\r\nimport {\r\n  TypeFormProduct,\r\n  setTypeFormCustomer,\r\n  setTypeFormProduct,\r\n} from \"../types/TypesForm\";\r\nimport useAuthStore from \"../stores/useAuthStore\";\r\nimport Modal from \"../components/controls/Modal\";\r\nimport ProductForm from \"../components/forms/ProductForm\";\r\n\r\nimport SearchInput from \"../components/controls/SeachInput\";\r\nimport { Link } from \"react-router-dom\";\r\nimport {\r\n  IconChevronRight,\r\n  IconNew,\r\n  IconRefresh,\r\n  IconSearch,\r\n} from \"../icons/Icon\";\r\nimport useLoading from \"../stores/useLoading\";\r\nimport APIFetchData from \"../stores/useFetchDataStore\";\r\n\r\nconst CustomersPage = () => {\r\n  const { t } = useTranslation();\r\n  const [formValues, setFormValue] = useState(TypeFormProduct);\r\n  const [searchValue, setSearchValue] = useState(\"\");\r\n  const [pageCustomers, setPageCustomers] = useState(1);\r\n  const [sizePages, setSizePages] = useState(25);\r\n  const [isModalOpen, setModalOpen] = useState(false);\r\n\r\n  const { auth } = useAuthStore((state) => ({\r\n    user: state.auth,\r\n  }));\r\n\r\n  const { isLoading, setIsLoading } = useLoading((state) => ({\r\n    isLoading: state.isLoading,\r\n    setIsLoading: state.setIsLoading,\r\n  }));\r\n\r\n  const { customers, setCustomers } = useCustomersStore((state) => ({\r\n    customers: state.customers,\r\n    setProduct: state.setCustomers,\r\n  }));\r\n\r\n  useEffect(() => {\r\n    if (auth?.authData?.id_usuario) {\r\n      setFormValue((prev) => ({\r\n        ...prev,\r\n        uid_creacion: auth.userData.id_usuario,\r\n      }));\r\n    }\r\n  }, [auth]);\r\n\r\n  const handleRefreshCustomers = useCallback(() => {\r\n    APIFetchData({\r\n      setStore: setCustomers,\r\n      url: `${API.customer.customers.url}?page_size=25&page_number=${pageCustomers}`,\r\n      method: API.customer.customers.method,\r\n      setIsLoading: setIsLoading,\r\n    });\r\n  }, [APIFetchData, pageCustomers]);\r\n\r\n  useEffect(() => {\r\n    handleRefreshCustomers();\r\n  }, [pageCustomers, handleRefreshCustomers]);\r\n\r\n  const handleChange = (event) => {\r\n    const { name, value, type, checked } = event.target;\r\n    const inputValue = type === \"checkbox\" ? (checked ? 1 : 0) : value;\r\n    setFormValue((prev) => ({\r\n      ...prev,\r\n      [name]: inputValue,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = (event) => {\r\n    event.preventDefault();\r\n    APIFetchData({\r\n      setStore: setCustomers,\r\n      url: API.customer.save.url,\r\n      method: API.customer.save.method,\r\n      body: formValues,\r\n      setIsLoading: setIsLoading,\r\n    });\r\n    closeModal();\r\n  };\r\n\r\n  const openModal = () => setModalOpen(true);\r\n  const closeModal = () => {\r\n    setFormValue(TypeFormProduct);\r\n    setModalOpen(false);\r\n  };\r\n\r\n  const handleSearchCustomers = () => {\r\n    if (searchValue.trim().length > 0) {\r\n      APIFetchData({\r\n        setStore: setCustomers,\r\n        url: `${API.customer.search.url}?value=${searchValue}`,\r\n        method: API.customer.search.method,\r\n        setIsLoading: setIsLoading,\r\n      });\r\n    } else {\r\n      APIFetchData({\r\n        setStore: setCustomers,\r\n        url: `${API.customer.customers.url}?page_size=25&page_number=${pageCustomers}`,\r\n        method: API.customer.customers.method,\r\n        setIsLoading: setIsLoading,\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleUpdate = (event) => {\r\n    const id = event.currentTarget.value;\r\n    const edit = customers?.data?.content.find(\r\n      (item) => item.id_cliente === Number(id)\r\n    );\r\n    const newValue = setTypeFormCustomer(edit);\r\n    setFormValue(newValue);\r\n    openModal();\r\n  };\r\n  return (\r\n    <LayoutDefault>\r\n      <div className=\"flex-1 w-full\">\r\n        <section className=\"bg-white px-4 pt-4 inline-flex justify-between items-center w-full border-b mb-4 \">\r\n          <h1 className=\"text-2xl font-semibold mb-1 pr-4 inline-flex items-center gap-2\">\r\n            <Link to=\"/\"> {t(\"home.title\")}</Link>\r\n            <IconChevronRight />\r\n            <span>{t(\"customers.title\")}</span>\r\n          </h1>\r\n          <span>\r\n            <button\r\n              className=\"bg-orange-400 text-white p-1 shadow hover:scale-95\"\r\n              value={\"refresh\"}\r\n              onClick={handleRefreshCustomers}\r\n            >\r\n              {/* Icon for refresh */}\r\n              <IconRefresh />\r\n            </button>\r\n          </span>\r\n        </section>\r\n        <section className=\"w-full bg-white divide-y border-b pb-4 mb-2.5\">\r\n          <section className=\"w-full px-5 mx-auto flex justify-between items-center\">\r\n            <div className=\"w-44\">\r\n              <button\r\n                className={`inline-flex gap-4 max-w-32 rounded-sm w-full min-w-20 outline-green-400 px-2.5 py-1.5 text-white font-semibold relative overflow-hidden capitalize group ${\r\n                  !isLoading\r\n                    ? \"bg-green-600 active:scale-95 shadow\"\r\n                    : \"bg-green-600/50\"\r\n                }`}\r\n                onClick={openModal}\r\n                type=\"submit\"\r\n                disabled={isLoading}\r\n              >\r\n                <IconNew />\r\n                {t(\"customers.new\")}\r\n                <div\r\n                  className={`absolute top-0 -inset-full h-full w-1/2 z-5 block transform -skew-x-12 bg-gradient-to-r from-transparent to-white opacity-40 ${\r\n                    isLoading\r\n                      ? \"animate-shineInfinity\"\r\n                      : \"group-hover:animate-shine\"\r\n                  } `}\r\n                />\r\n              </button>\r\n            </div>\r\n            <div className=\"inline-flex\">\r\n              <SearchInput\r\n                searchValue={searchValue}\r\n                setSearchValue={setSearchValue}\r\n              />\r\n              <button\r\n                className={`max-w-24 outline-sky-400 px-2.5 py-1.5 text-white font-semibold relative overflow-hidden group ${\r\n                  !isLoading\r\n                    ? \"bg-sky-600 active:scale-95 shadow\"\r\n                    : \"bg-sky-600/50\"\r\n                }`}\r\n                onClick={handleSearchCustomers}\r\n                type=\"button\"\r\n                disabled={isLoading}\r\n              >\r\n                <IconSearch />\r\n                <div\r\n                  className={`absolute top-0 -inset-full h-full w-1/2 z-5 block transform -skew-x-12 bg-gradient-to-r from-transparent to-white opacity-40 ${\r\n                    isLoading\r\n                      ? \"animate-shineInfinity\"\r\n                      : \"group-hover:animate-shine\"\r\n                  } `}\r\n                />\r\n              </button>\r\n            </div>\r\n          </section>\r\n        </section>\r\n        {/* Modal and forms */}\r\n        <Modal isOpen={isModalOpen} onClose={closeModal}>\r\n          <ProductForm\r\n            isLoading={isLoading}\r\n            formValues={formValues}\r\n            setFormValue={setFormValue}\r\n            handleChange={handleChange}\r\n            handleSubmit={handleSubmit}\r\n          />\r\n        </Modal>\r\n      </div>\r\n    </LayoutDefault>\r\n  );\r\n};\r\n\r\nexport default CustomersPage;\r\n"],"names":["useCustomersStore","create","set","newCustomers","CustomersPage","t","useTranslation","formValues","setFormValue","useState","TypeFormProduct","searchValue","setSearchValue","pageCustomers","setPageCustomers","isModalOpen","setModalOpen","auth","useAuthStore","state","isLoading","setIsLoading","useLoading","customers","setCustomers","useEffect","_a","prev","handleRefreshCustomers","useCallback","APIFetchData","API","handleChange","event","name","value","type","checked","inputValue","handleSubmit","closeModal","openModal","handleSearchCustomers","jsx","LayoutDefault","jsxs","Link","IconChevronRight","IconRefresh","IconNew","SearchInput","IconSearch","Modal","ProductForm"],"mappings":"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"}